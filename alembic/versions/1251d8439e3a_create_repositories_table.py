"""Create repositories table

Revision ID: 1251d8439e3a
Revises: 
Create Date: 2025-07-19 20:10:02.439579

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1251d8439e3a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('repositories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False, comment='Repository name'),
    sa.Column('owner', sa.String(), nullable=False, comment='Repository owner/organization'),
    sa.Column('service_type', sa.String(), nullable=False, comment='Git service type (github, gitlab, etc.)'),
    sa.Column('url', sa.String(), nullable=False, comment='Repository URL'),
    sa.Column('base_url', sa.String(), nullable=True, comment='Custom git service base URL'),
    sa.Column('default_branch', sa.String(), nullable=True, comment='Default branch'),
    sa.Column('root_path', sa.String(), nullable=True, comment='Documentation root directory path'),
    sa.Column('description', sa.Text(), nullable=True, comment='Repository description'),
    sa.Column('is_public', sa.Boolean(), nullable=True, comment='Is repository publicly accessible'),
    sa.Column('access_token_encrypted', sa.String(), nullable=True, comment='Encrypted access token'),
    sa.Column('supported_branches_json', sa.JSON(), nullable=True, comment='List of supported branches'),
    sa.Column('repo_metadata', sa.JSON(), nullable=True, comment='Additional repository metadata'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='Creation timestamp'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='Last update timestamp'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('service_type', 'owner', 'name', name='uq_repository_service_owner_name')
    )
    op.create_index('idx_repository_owner', 'repositories', ['owner'], unique=False)
    op.create_index('idx_repository_service', 'repositories', ['service_type'], unique=False)
    op.create_index('idx_repository_service_owner_name', 'repositories', ['service_type', 'owner', 'name'], unique=False)
    op.create_index(op.f('ix_repositories_id'), 'repositories', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_repositories_id'), table_name='repositories')
    op.drop_index('idx_repository_service_owner_name', table_name='repositories')
    op.drop_index('idx_repository_service', table_name='repositories')
    op.drop_index('idx_repository_owner', table_name='repositories')
    op.drop_table('repositories')
    # ### end Alembic commands ###
